{"version":3,"sources":["hooks/use-on-click-outside.jsx","api/index.js","components/Loader/Loader.jsx","store/actions/city.actions.js","utils/index.js","store/actions/toast.actions.js","components/Search/Search.jsx","hooks/use-async.jsx","hooks/use-debounce.jsx","store/actions/weather.actions.js","components/Dropdown/Dropdown.jsx","components/CurrentWeather/CurrentWeather.jsx","components/HourlyTab/HourlyTab.jsx","components/TwoDaysWeather/TwoDaysWeather.jsx","components/Tab/Tab.jsx","components/WeeklyWeather/WeeklyWeather.jsx","components/Block/Block.jsx","components/Address/Address.jsx","components/Toast/Toast.jsx","App.jsx","serviceWorker.js","store/reducers/city.reducer.js","store/reducers/weather.reducer.js","store/reducers/toast.reducer.js","index.js","store/index.js"],"names":["useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","weather","axios","create","baseURL","nominatim","getGeoloc","cityName","get","params","q","format","addressdetails","then","data","map","display_name","lat","lon","address","filter","city","undefined","village","vilage","Loader","className","setCity","type","payload","getWeatherIcon","id","icon","faSun","color","faCloudSun","faCloud","faCloudShowersHeavy","faCloudSunRain","faBolt","faSnowflake","faSmog","faMoon","faCloudMoon","faCloudMoonRain","find","i","getDateStringFromUnixDt","dt","Date","getDay","getHour","minutes","date","ret","String","getHours","padStart","getMinutes","getTempForUnit","temp","unit","Math","round","capitalize","str","substr","toUpperCase","slice","getAddress","addr","municipality","town","countyName","region","state","state_district","county","countryName","country","country_code","continent","addToast","title","message","dispatch","getState","setTimeout","removeToast","Search","useState","query","setQuery","isEditing","setIsEditing","useDispatch","selectedCity","useSelector","cityReducer","isLoading","setIsLoading","asyncFunction","immediate","pending","setPending","value","setValue","error","setError","execute","useCallback","response","catch","finally","useAsync","debouncedQuery","delay","debouncedValue","setDebouncedValue","clearTimeout","useDebounce","useRef","onClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","faCircleNotch","spin","faSearchLocation","autoFocus","placeholder","onChange","e","classNames","empty","length","key","selectCity","getWeather","appid","process","units","hoursRemaining","hourly","getWeatherForLocation","getWeatherSuccess","getWeatherFailure","Dropdown","isOpen","setIsOpen","selectUnit","celsiusButton","farenheitButton","faAngleUp","faAngleDown","CurrentWeather","setUnit","description","u","feels_like","wind_speed","humidity","HourlyTab","hourData","onToggle","open","alt","pop","faTint","faTintSlash","wind_gust","pressure","TwoDaysWeather","openedTab","setOpenedTab","toggleTab","index","d","Tab","dayData","style","width","fontSize","max","min","sunrise","sunset","morn","day","eve","night","WeeklyWeather","tabOpened","setTabOpened","Block","children","Address","Toast","toast","toastReducer","show","faTimesCircle","size","App","selectedCityStore","weatherStore","weatherReducer","daily","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialState","loading","action","store","rootReducers","combineReducers","reduxMiddlewares","applyMiddleware","thunk","createStore","configureStore","ReactDOM","render","getElementById","URL","href","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d81fb8aa.chunk.js","sourcesContent":["import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n};\n","import axios from \"axios\";\n\nconst weather = axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\n});\n\nconst nominatim = axios.create({\n  baseURL: \"https://nominatim.openstreetmap.org/\",\n});\n\nexport const getGeoloc = (cityName) => {\n  return nominatim\n    .get(\"search\", {\n      params: {\n        q: cityName,\n        format: \"json\",\n        addressdetails: 1,\n      },\n    })\n    .then(({ data }) =>\n      data\n        .map(({ display_name, lat, lon, address }) => ({\n          display_name,\n          lat,\n          lon,\n          address,\n        }))\n        .filter(({ address }) => {\n          return (\n            (address.city !== null && address.city !== undefined) ||\n            (address.village !== null && address.vilage !== undefined)\n          );\n        })\n    );\n};\n\nexport const getCityName = (lat, lon) => {\n  return nominatim\n    .get(\"reverse\", {\n      params: {\n        lat,\n        lon,\n        format: \"json\",\n        addressdetails: 1,\n      },\n    })\n    .then(({ data }) => {\n      return {\n        display_name: data.display_name,\n        lat: data.lat,\n        lon: data.lon,\n        address: data.address,\n      };\n    });\n};\n\nexport const getWeatherForLocation = (lat, lon) => {\n  return weather\n    .get(\"onecall\", {\n      params: {\n        appid: process.env.REACT_APP_OPENWEATHERMAP_API_KEY,\n        lat,\n        lon,\n        units: \"metric\",\n      },\n    })\n    .then(({ data }) => {\n      const now = new Date();\n      const hoursRemaining = 24 - now.getHours();\n      data.hourly = [\n        data.hourly.slice(0, hoursRemaining + 1),\n        data.hourly.slice(hoursRemaining + 1, 25 + hoursRemaining),\n      ];\n      return data;\n    });\n};\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"lds-ellipsis\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n","export const setCityAction = \"[CITY] Set city\";\nexport const resetCityAction = \"[CITY] Reset city\";\n\nexport const setCity = (city) => ({\n  type: setCityAction,\n  payload: city,\n});\n\nexport const resetCity = () => ({\n  type: resetCityAction,\n});\n","import {\n  faSun,\n  faCloudSun,\n  faCloud,\n  faCloudShowersHeavy,\n  faBolt,\n  faSnowflake,\n  faSmog,\n  faMoon,\n  faCloudMoon,\n  faCloudMoonRain,\n  faCloudSunRain,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const getWeatherIcon = (id) => {\n  const icons = [\n    {\n      id: \"01d\",\n      icon: faSun,\n      color: \"#ffc845\",\n    },\n    {\n      id: \"02d\",\n      icon: faCloudSun,\n      color: \"#ffc845\",\n    },\n    {\n      id: \"03d\",\n      icon: faCloud,\n      color: \"#7C7E8D\",\n    },\n    {\n      id: \"04d\",\n      icon: faCloudSun,\n      color: \"#ffc845\",\n    },\n    {\n      id: \"09d\",\n      icon: faCloudShowersHeavy,\n      color: \"#16132f\",\n    },\n    {\n      id: \"10d\",\n      icon: faCloudSunRain,\n      color: \"#16132f\",\n    },\n    {\n      id: \"11d\",\n      icon: faBolt,\n      color: \"#ffc845\",\n    },\n    {\n      id: \"13d\",\n      icon: faSnowflake,\n      color: \"#25A2D8\",\n    },\n    {\n      id: \"50d\",\n      icon: faSmog,\n      color: \"#cccccc\",\n    },\n    {\n      id: \"01n\",\n      icon: faMoon,\n      color: \"#4e4cac\",\n    },\n    {\n      id: \"02n\",\n      icon: faCloudMoon,\n      color: \"#4e4cac\",\n    },\n    {\n      id: \"03n\",\n      icon: faCloud,\n      color: \"#7C7E8D\",\n    },\n    {\n      id: \"04n\",\n      icon: faCloudMoon,\n      color: \"#4e4cac\",\n    },\n    {\n      id: \"09n\",\n      icon: faCloudShowersHeavy,\n      color: \"#16132f\",\n    },\n    {\n      id: \"10n\",\n      icon: faCloudMoonRain,\n      color: \"#4e4cac\",\n    },\n    {\n      id: \"11n\",\n      icon: faBolt,\n      color: \"#ffc845\",\n    },\n    {\n      id: \"13n\",\n      icon: faSnowflake,\n      color: \"#25A2D8\",\n    },\n    {\n      id: \"50n\",\n      icon: faSmog,\n      color: \"#cccccc\",\n    },\n  ];\n\n  return icons.find((i) => i.id === id);\n};\n\nexport const getDateStringFromUnixDt = (dt) => {\n  const dayIndex = new Date(dt * 1000).getDay();\n  const weekdays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  return weekdays[dayIndex];\n};\n\nexport const getHour = (dt, minutes = true) => {\n  const date = new Date(dt * 1000);\n  let ret = `${String(date.getHours()).padStart(2, \"0\")}h`;\n  if (minutes) ret += String(date.getMinutes()).padStart(2, \"0\");\n  return ret;\n};\n\nexport const getTempForUnit = (temp, unit) => {\n  if (unit === \"celsius\") {\n    return Math.round(temp);\n  } else {\n    return Math.round((temp * 9) / 5 + 32);\n  }\n};\n\nexport const capitalize = (str) => {\n  return str.substr(0, 1).toUpperCase() + str.slice(1);\n};\n\nexport const getAddress = (addr) => {\n  if (!addr) return null;\n  const cityName = addr.city || addr.municipality || addr.town || addr.village;\n  const countyName =\n    addr.region || addr.state || addr.state_district || addr.county;\n  const countryName = addr.country || addr.country_code || addr.continent;\n  return { cityName, countyName, countryName };\n};\n","export const addToastAction = \"[TOAST] Add toast\";\nexport const removeToastAction = \"[TOAST] Remove toast\";\n\nexport const addToast = (title, message, type) => (dispatch, getState) => {\n  dispatch({\n    type: addToastAction,\n    payload: {\n      title,\n      message,\n      type,\n    },\n  });\n  setTimeout(() => {\n    dispatch(removeToast());\n  }, 3000);\n};\n\nexport const removeToast = () => ({\n  type: removeToastAction,\n});\n","import React, { useState, useRef } from \"react\";\nimport \"./Search.scss\";\nimport { useEffect } from \"react\";\nimport { useDebounce, useAsync, useOnClickOutside } from \"../../hooks\";\nimport { getGeoloc, getCityName } from \"../../api\";\nimport { Loader } from \"../Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCity, resetCity } from \"../../store/actions/city.actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearchLocation,\n  faCircleNotch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\nimport { getAddress } from \"../../utils\";\nimport { addToast } from \"../../store/actions/toast.actions\";\n\nexport const Search = () => {\n  const [query, setQuery] = useState();\n  const [isEditing, setIsEditing] = useState(false);\n\n  const dispatch = useDispatch();\n  const selectedCity = useSelector((state) => state.cityReducer.city);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { execute, pending, value, error } = useAsync(getGeoloc, false);\n\n  const debouncedQuery = useDebounce(query, 500);\n\n  useEffect(() => {\n    if (debouncedQuery) {\n      dispatch(resetCity());\n      execute(debouncedQuery);\n    }\n  }, [debouncedQuery, execute, dispatch]);\n\n  const selectCity = (city) => {\n    dispatch(setCity(city));\n  };\n\n  const getOwnGeoloc = () => {\n    if (\"geolocation\" in navigator) {\n      setIsLoading(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          getCityName(position.coords.latitude, position.coords.longitude).then(\n            (data) => {\n              dispatch(setCity(data));\n              setIsLoading(false);\n            }\n          );\n        },\n        (err) => {\n          setIsLoading(false);\n          dispatch(\n            addToast(\n              \"Unable to locate you.\",\n              \"Please type in your location manually.\",\n              \"error\"\n            )\n          );\n        }\n      );\n    } else {\n      setIsLoading(false);\n      dispatch(\n        addToast(\n          \"Your browser doesn't support geolocation.\",\n          \"Please type in your location manually.\",\n          \"error\"\n        )\n      );\n    }\n  };\n\n  const focusSearch = () => {\n    setIsEditing(true);\n  };\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => setIsEditing(false));\n\n  return (\n    <>\n      <div className=\"searchbar\">\n        <button title=\"Search my location\" onClick={getOwnGeoloc}>\n          {isLoading || pending ? (\n            <FontAwesomeIcon icon={faCircleNotch} spin />\n          ) : (\n            <FontAwesomeIcon icon={faSearchLocation} />\n          )}\n        </button>\n        {isEditing ? (\n          <input\n            autoFocus\n            ref={ref}\n            type=\"text\"\n            placeholder=\"City name\"\n            onChange={(e) => setQuery(e.target.value)}\n          />\n        ) : (\n          <span\n            onClick={focusSearch}\n            className={classNames(\"placeholder\", {\n              empty: !selectedCity?.address,\n            })}\n          >\n            {(selectedCity && getAddress(selectedCity?.address).cityName) ||\n              \"City name\"}\n          </span>\n        )}\n        {!selectedCity && value?.length > 0 && (\n          <div className=\"query-results\">\n            {value.map((city, i) => (\n              <button key={i} onClick={() => selectCity(city)}>\n                {city.address.city}, {city.address.state},{\" \"}\n                {city.address.country}\n              </button>\n            ))}\n            {pending && <Loader />}\n            {error && <div className=\"error\">{error}</div>}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState, useCallback, useEffect } from \"react\";\n\nexport const useAsync = (asyncFunction, immediate = true) => {\n  const [pending, setPending] = useState(false);\n  const [value, setValue] = useState(null);\n  const [error, setError] = useState(null);\n\n  // The execute function wraps asyncFunction and\n  // handles setting state for pending, value, and error.\n  // useCallback ensures the below useEffect is not called\n  // on every render, but only if asyncFunction changes.\n  const execute = useCallback(\n    (...args) => {\n      setPending(true);\n      setValue(null);\n      setError(null);\n\n      return asyncFunction(...args)\n        .then((response) => setValue(response))\n        .catch((error) => setError(error))\n        .finally(() => setPending(false));\n    },\n    [asyncFunction]\n  );\n\n  // Call execute if we want to fire it right away.\n  // Otherwise execute can be called later, such as\n  // in an onClick handler.\n  useEffect(() => {\n    if (immediate) {\n      execute();\n    }\n  }, [execute, immediate]);\n\n  return { execute, pending, value, error };\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useDebounce = (value, delay) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n};\n","import { getWeatherForLocation } from \"../../api\";\n\nexport const getWeatherAction = \"[WEATHER] Get Weather\";\nexport const getWeatherSuccessAction = \"[WEATHER] Get Weather - Success\";\nexport const getWeatherFailureAction = \"[WEATHER] Get Weather - Failure\";\n\nexport const getWeather = (lat, lon) => (dispatch, getState) => {\n  dispatch({ type: getWeatherAction });\n  getWeatherForLocation(lat, lon)\n    .then((data) => {\n      dispatch(getWeatherSuccess(data));\n    })\n    .catch((err) => {\n      dispatch(getWeatherFailure(err));\n    });\n};\n\nexport const getWeatherSuccess = (data) => ({\n  type: getWeatherSuccessAction,\n  payload: data,\n});\n\nexport const getWeatherFailure = (err) => ({\n  type: getWeatherFailureAction,\n  payload: err,\n});\n","import React from \"react\";\nimport \"./Dropdown.scss\";\nimport { capitalize } from \"../../utils\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\nimport { useRef } from \"react\";\nimport { useOnClickOutside } from \"../../hooks\";\n\nexport const Dropdown = ({ onChange, unit }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const ref = useRef();\n\n  useOnClickOutside(ref, () => setIsOpen(false));\n\n  const selectUnit = (unit) => {\n    setIsOpen(false);\n    onChange(unit);\n  };\n\n  const toggleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const celsiusButton = (\n    <button\n      onClick={() => selectUnit(\"celsius\")}\n      className={classNames({\n        current: unit === \"celsius\",\n      })}\n    >\n      Celsius\n    </button>\n  );\n\n  const farenheitButton = (\n    <button\n      onClick={() => selectUnit(\"farenheit\")}\n      className={classNames({\n        current: unit === \"farenheit\",\n      })}\n    >\n      Farenheit\n    </button>\n  );\n\n  return (\n    <div className=\"dropdown\">\n      <button onClick={toggleOpen}>\n        {capitalize(unit)}{\" \"}\n        <FontAwesomeIcon icon={isOpen ? faAngleUp : faAngleDown} />\n      </button>\n      {isOpen && (\n        <div className=\"options\" ref={ref}>\n          {unit === \"celsius\" ? (\n            <>\n              {celsiusButton}\n              {farenheitButton}\n            </>\n          ) : (\n            <>\n              {farenheitButton}\n              {celsiusButton}\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  getWeatherIcon,\n  getDateStringFromUnixDt,\n  getTempForUnit,\n} from \"../../utils\";\nimport { useState } from \"react\";\nimport \"./CurrentWeather.scss\";\nimport { Dropdown } from \"../Dropdown/Dropdown\";\n\nexport const CurrentWeather = ({ data }) => {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  const icon = getWeatherIcon(data.weather[0].icon);\n\n  return (\n    <div className=\"current-weather\">\n      <div className=\"controls\">\n        <div>\n          <h2>{`${getDateStringFromUnixDt(data.dt)} ${new Date(\n            data.dt * 1000\n          ).getHours()}h`}</h2>\n          <span>{data.weather[0].description}</span>\n        </div>\n        <Dropdown onChange={(u) => setUnit(u)} unit={unit} />\n      </div>\n      <div className=\"temp\">\n        <strong>\n          <FontAwesomeIcon icon={icon?.icon} color={icon?.color} />{\" \"}\n          {getTempForUnit(data.temp, unit)}°\n        </strong>\n      </div>\n      <div className=\"additionnal-infos\">\n        <ul>\n          <li>Feels like: {getTempForUnit(data.feels_like, unit)}°</li>\n          <li>Wind: {Math.round(data.wind_speed * 360) / 100}km/h</li>\n          <li>Humidity: {data.humidity}%</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./HourlyTab.scss\";\nimport { getTempForUnit, getWeatherIcon, capitalize } from \"../../utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTint, faTintSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\n\nexport const HourlyTab = ({ hourData, unit, isOpen, onToggle }) => {\n  const icon = getWeatherIcon(hourData.weather[0].icon);\n\n  return (\n    <div\n      className={classNames(\"hourly-tab\", { open: isOpen })}\n      onClick={onToggle}\n    >\n      <div className=\"heading\">\n        <div>\n          <strong>{`${new Date(hourData.dt * 1000).getHours()}h`}</strong>\n        </div>\n        <div>{getTempForUnit(hourData.temp, unit)}°</div>\n        <div>\n          <FontAwesomeIcon\n            alt=\"Precipitation icon\"\n            title={`${Math.round(\n              hourData.pop * 100\n            )}% chance of precipitations`}\n            icon={hourData.pop > 0.15 ? faTint : faTintSlash}\n          />\n        </div>\n        <div>\n          <FontAwesomeIcon\n            icon={icon?.icon}\n            color={icon.color}\n            alt=\"Weather icon\"\n            title={capitalize(hourData.weather[0].description)}\n          />\n        </div>\n      </div>\n      <div className=\"body\">\n        <table>\n          <tbody>\n            <tr>\n              <th>Feels like</th>\n              <td>{getTempForUnit(hourData.feels_like, unit)}°</td>\n            </tr>\n            <tr>\n              <th>Wind</th>\n              <td>\n                {Math.round(hourData.wind_speed * 3.6)} km/h\n                {hourData.wind_gust &&\n                  `, with gusts up to ${Math.round(\n                    hourData.wind_gust * 3.6\n                  )} km/h`}\n              </td>\n            </tr>\n            <tr>\n              <th>Humidity</th>\n              <td>{hourData.humidity}%</td>\n            </tr>\n            <tr>\n              <th>Atmospheric pressure</th>\n              <td>{hourData.pressure} hPa</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./TwoDaysWeather.scss\";\nimport { Dropdown } from \"../Dropdown/Dropdown\";\nimport { HourlyTab } from \"../HourlyTab/HourlyTab\";\nimport { getDateStringFromUnixDt } from \"../../utils\";\n\nexport const TwoDaysWeather = ({ data }) => {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  const [openedTab, setOpenedTab] = useState();\n\n  const toggleTab = (index) => {\n    if (openedTab === index) {\n      setOpenedTab(null);\n    } else {\n      setOpenedTab(index);\n    }\n  };\n\n  return (\n    <div className=\"two-days-weather\">\n      <div className=\"controls\">\n        <h2>Hourly weather</h2>\n        <Dropdown onChange={(u) => setUnit(u)} unit={unit} />\n      </div>\n      {data && (\n        <>\n          <span className=\"day-separator\">Today</span>\n          {data[0] &&\n            data[0]\n              .filter((d, i) => i % 3 === 0)\n              .map((d, i) => (\n                <HourlyTab\n                  key={d.dt}\n                  onToggle={() => toggleTab(d.dt)}\n                  hourData={d}\n                  isOpen={openedTab === d.dt}\n                  unit={unit}\n                />\n              ))}\n          <span className=\"day-separator\">\n            {getDateStringFromUnixDt(data[1][0].dt)}\n          </span>\n          {data[1] &&\n            data[1]\n              .filter((d, i) => i % 3 === 0)\n              .map((d, i) => (\n                <HourlyTab\n                  key={d.dt}\n                  onToggle={() => toggleTab(d.dt)}\n                  hourData={d}\n                  isOpen={openedTab === d.dt}\n                  unit={unit}\n                />\n              ))}\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Tab.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nimport {\n  getHour,\n  getDateStringFromUnixDt,\n  getTempForUnit,\n  capitalize,\n  getWeatherIcon,\n} from \"../../utils\";\n\nexport const Tab = ({ dayData, unit, isOpen, onToggle }) => {\n  const icon = getWeatherIcon(dayData.weather[0].icon);\n\n  return (\n    <div\n      onClick={onToggle}\n      className={classNames(\"tab\", {\n        open: isOpen,\n      })}\n    >\n      <div className=\"heading\">\n        <div>\n          <strong>{getDateStringFromUnixDt(dayData.dt)}</strong>\n          <br />\n          {capitalize(dayData.weather[0].description)}\n        </div>\n        <div className=\"precipitations\">\n          {dayData.pop > 0.15 ? (\n            <span title=\"Precipitation chances\">\n              {Math.round(dayData.pop * 100)}%\n            </span>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div>\n          <FontAwesomeIcon\n            alt=\"Weather icon\"\n            title={dayData.weather[0].description}\n            icon={icon.icon}\n            color={icon.color}\n            style={{ width: \"40px\", fontSize: \"40px\" }}\n          />\n        </div>\n        <div className=\"min-max\">\n          <span title=\"Maximum temperature\">\n            {getTempForUnit(dayData.temp.max, unit)}°\n          </span>\n          <span title=\"Minimum temperature\">\n            {getTempForUnit(dayData.temp.min, unit)}°\n          </span>\n        </div>\n      </div>\n      <div className=\"body\">\n        <table className=\"general-infos\">\n          <tbody>\n            <tr>\n              <th>Wind</th>\n              <td>{Math.round(dayData.wind_speed * 3.6)} km/h</td>\n            </tr>\n            <tr>\n              <th>Humidity</th>\n              <td>{dayData.humidity}%</td>\n            </tr>\n            <tr>\n              <th>Sunrise</th>\n              <td>{getHour(new Date(dayData.sunrise))}</td>\n            </tr>\n            <tr>\n              <th>Sunset</th>\n              <td>{getHour(new Date(dayData.sunset))}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"day-temps\">\n          <div className=\"morning\">\n            <span>Morning</span>\n            <br />\n            <strong>{getTempForUnit(dayData.temp.morn, unit)}°</strong>\n          </div>\n          <div className=\"day\">\n            <span>Day</span>\n            <br />\n            <strong>{getTempForUnit(dayData.temp.day, unit)}°</strong>\n          </div>\n          <div className=\"evening\">\n            <span>Evening</span>\n            <br />\n            <strong>{getTempForUnit(dayData.temp.eve, unit)}°</strong>\n          </div>\n          <div className=\"night\">\n            <span>Night</span>\n            <br />\n            <strong>{getTempForUnit(dayData.temp.night, unit)}°</strong>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./WeeklyWeather.scss\";\nimport { Dropdown } from \"../Dropdown/Dropdown\";\nimport { Tab } from \"../Tab/Tab\";\n\nexport const WeeklyWeather = ({ data }) => {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  const [tabOpened, setTabOpened] = useState();\n\n  const toggleOpen = (index) => {\n    if (tabOpened === index) {\n      setTabOpened(null);\n    } else {\n      setTabOpened(index);\n    }\n  };\n\n  return (\n    <div className=\"weekly\">\n      <div className=\"controls\">\n        <h2>Weekly weather</h2>\n        <Dropdown onChange={(u) => setUnit(u)} unit={unit} />\n      </div>\n      <div>\n        {data.map((d, i) => (\n          <Tab\n            dayData={d}\n            unit={unit}\n            key={d.dt}\n            isOpen={tabOpened === i}\n            onToggle={() => toggleOpen(i)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Block.scss\";\n\nexport const Block = ({ children }) => {\n  return <div className=\"block\">{children}</div>;\n};\n","import React from \"react\";\nimport \"./Address.scss\";\nimport { getAddress } from \"../../utils\";\n\nexport const Address = ({ address }) => {\n  const { cityName, countyName, countryName } = getAddress(address);\n\n  return (\n    <div className=\"address\">\n      <h1>{cityName}</h1>\n      <h2>{countyName}</h2>\n      <h2>{countryName}</h2>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Toast.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { removeToast } from \"../../store/actions/toast.actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Toast = () => {\n  const toast = useSelector((state) => state.toastReducer.toast);\n  const dispatch = useDispatch();\n\n  const closeToast = () => {\n    dispatch(removeToast());\n  };\n\n  return (\n    <div className={classNames(\"toast\", toast?.type, { show: toast !== null })}>\n      {toast && (\n        <>\n          <button onClick={closeToast}>\n            <FontAwesomeIcon icon={faTimesCircle} size=\"2x\" />\n          </button>\n          <p>\n            <strong>{toast.title}</strong>\n            <br />\n            {toast.message}\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Search } from \"./components/Search/Search\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getWeather } from \"./store/actions/weather.actions\";\nimport { CurrentWeather } from \"./components/CurrentWeather/CurrentWeather\";\nimport { TwoDaysWeather } from \"./components/TwoDaysWeather/TwoDaysWeather\";\nimport { WeeklyWeather } from \"./components/WeeklyWeather/WeeklyWeather\";\nimport { Block } from \"./components/Block/Block\";\nimport { Address } from \"./components/Address/Address\";\nimport { Loader } from \"./components/Loader/Loader\";\nimport { Toast } from \"./components/Toast/Toast\";\n\nfunction App() {\n  const selectedCityStore = useSelector((state) => state.cityReducer);\n  const weatherStore = useSelector((state) => state.weatherReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (selectedCityStore.city) {\n      dispatch(\n        getWeather(selectedCityStore.city.lat, selectedCityStore.city.lon)\n      );\n    }\n  }, [selectedCityStore.city, dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Toast />\n      <Search />\n      {selectedCityStore.city && (\n        <>\n          <Address address={selectedCityStore.city.address} />\n          {weatherStore.weather ? (\n            <>\n              <div className=\"side-by-side\">\n                <div>\n                  <Block>\n                    <CurrentWeather data={weatherStore.weather.current} />\n                  </Block>\n                  <Block>\n                    <WeeklyWeather data={weatherStore.weather.daily} />\n                  </Block>\n                </div>\n                <Block>\n                  <TwoDaysWeather data={weatherStore.weather.hourly} />\n                </Block>\n              </div>\n            </>\n          ) : (\n            <Loader />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { setCityAction, resetCityAction } from \"../actions/city.actions\";\n\nconst initialState = {\n  city: null,\n  loading: false,\n  error: null,\n};\n\nexport const cityReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case setCityAction:\n      return {\n        ...state,\n        city: action.payload,\n      };\n    case resetCityAction:\n      return {\n        ...state,\n        city: null,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  getWeatherAction,\n  getWeatherSuccessAction,\n  getWeatherFailureAction,\n} from \"../actions/weather.actions\";\n\nconst initialState = {\n  weather: null,\n  loading: false,\n  error: null,\n};\n\nexport const weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case getWeatherAction:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case getWeatherSuccessAction:\n      return {\n        ...state,\n        loading: false,\n        weather: action.payload,\n      };\n    case getWeatherFailureAction:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { addToastAction, removeToastAction } from \"../actions/toast.actions\";\n\nconst initialState = {\n  toast: null,\n};\n\nexport const toastReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case addToastAction:\n      return {\n        ...state,\n        toast: action.payload,\n      };\n    case removeToastAction:\n      return {\n        ...state,\n        toast: null,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { cityReducer, weatherReducer, toastReducer } from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const configureStore = (initialState) => {\n  const rootReducers = combineReducers({\n    cityReducer,\n    weatherReducer,\n    toastReducer,\n  });\n\n  let reduxMiddlewares = applyMiddleware(thunk);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    reduxMiddlewares = composeWithDevTools(reduxMiddlewares);\n  }\n\n  return createStore(rootReducers, initialState, reduxMiddlewares);\n};\n"],"sourceRoot":""}